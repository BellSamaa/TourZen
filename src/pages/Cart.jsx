// src/pages/Cart.jsx
// (S·ª≠a l·ªói c√∫ ph√°p + N√∫t Thanh to√°n d√πng useNavigate)
import React, { useState } from "react";
// S·ª¨A: Th√™m useNavigate
import { Link, useNavigate } from "react-router-dom";
import { Trash2, ShoppingBag, Plus, Minus } from "lucide-react";
import { useCart } from "../context/CartContext";
import { motion, AnimatePresence } from "framer-motion";
import { FaUser, FaChild, FaBaby } from "react-icons/fa";
import toast from 'react-hot-toast';

// --- S·ª¨A ·ªû ƒê√ÇY: Kh√¥i ph·ª•c h√†m formatCurrency ---
const formatCurrency = (number) =>
  typeof number === "number"
    ? new Intl.NumberFormat("vi-VN", { style: "currency", currency: "VND" }).format(number)
    : "N/A";
// --- K·∫æT TH√öC S·ª¨A ---

// --- S·ª¨A ·ªû ƒê√ÇY: Kh√¥i ph·ª•c CartQuantityInput ---
const CartQuantityInput = ({ label, icon: Icon, value, onDecrease, onIncrease, min = 0 }) => (
    <div className="flex items-center justify-between py-1">
        <label className="flex items-center gap-1.5 text-xs text-gray-600 dark:text-gray-400">
            <Icon size={12} className="text-gray-500" />
            {label}
        </label>
        <div className="flex items-center gap-1.5">
            <button type="button" onClick={onDecrease} disabled={value <= min} className="p-1 rounded-full bg-gray-200 dark:bg-neutral-600 hover:bg-gray-300 disabled:opacity-50">
                <Minus size={10} />
            </button>
            <span className="w-6 text-center text-sm font-medium dark:text-white">{value}</span>
            <button type="button" onClick={onIncrease} className="p-1 rounded-full bg-gray-200 dark:bg-neutral-600 hover:bg-gray-300">
                <Plus size={10} />
            </button>
        </div>
    </div>
);
// --- K·∫æT TH√öC S·ª¨A ---


export default function CartPage() { // Ho·∫∑c Cart
  const navigate = useNavigate(); // <-- Hook useNavigate
  const { items, removeFromCart, clearCart, total, updateQty } = useCart();
  const [notification, setNotification] = useState("");

  // Ph·∫ßn Gi·ªè h√†ng tr·ªëng (Gi·ªØ nguy√™n)
  if (!items || items.length === 0) return ( /* ... JSX Gi·ªè h√†ng tr·ªëng ... */ );

  const calculateItemTotal = (item) => /* ... Gi·ªØ nguy√™n ... */;
  const handleQtyChange = (key, type, delta) => { /* ... Gi·ªØ nguy√™n ... */ };
  const handleCheckout = () => { navigate('/payment'); }; // <-- H√†m cho n√∫t

  return (
    <div className="max-w-5xl mx-auto px-6 py-16">
      {/* ... Ti√™u ƒë·ªÅ ... */}
      <div className="bg-white dark:bg-neutral-800 shadow-lg rounded-2xl overflow-hidden">
        <AnimatePresence>
            {items.map((item) => (
              <motion.div key={item.key} /* ... motion props ... */ className="flex flex-col md:flex-row ...">
                {/* ... Th√¥ng tin tour ... */}
                {/* ... Ch·ªçn s·ªë l∆∞·ª£ng ... */}
                {/* ... N√∫t x√≥a ... */}
              </motion.div>
            ))}
        </AnimatePresence>
      </div>

      {/* T·ªïng c·ªông & n√∫t thanh to√°n */}
      <div className="flex flex-col sm:flex-row justify-between items-center mt-10 gap-4">
          <button onClick={() => { /* ... clear cart ... */ }} className="text-red-500 font-semibold hover:text-red-700">
            üóë X√≥a t·∫•t c·∫£
          </button>
          <div className="text-right">
              <p className="text-lg font-medium text-gray-600 dark:text-gray-300">T·ªïng c·ªông:</p>
              <p className="text-3xl font-bold text-sky-600">{formatCurrency(total)}</p>
              {/* --- D√πng button thay v√¨ Link --- */}
              <button
                onClick={handleCheckout} // G·ªçi h√†m x·ª≠ l√Ω
                className="mt-4 inline-block bg-sky-500 hover:bg-sky-600 text-white px-6 py-3 rounded-full font-semibold transition-all"
              >
                Thanh to√°n
              </button>
              {/* --- K·∫øt th√∫c s·ª≠a --- */}
          </div>
      </div>

      {/* Th√¥ng b√°o */}
       {notification && ( <motion.div /* ... */ >{notification}</motion.div> )}
    </div>
  );
}